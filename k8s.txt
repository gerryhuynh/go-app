Kubernetes: API

etcd: kv store
// API for etcd: gRPC

CRUDW
Create /foo/bar/baz
Read /foo/bar/baz
Update /foo/bar/baz
Delete /foo/bar/baz
Watch /foo/bar/baz


// Kubernetes is a bunch of controllers (control loops) that watch the etcd for changes
// and take actions based on the changes.

// Pod (native obj)
// pod controller -> watches pods -> reacts to changes in pods (etcd) ->
// pod controller -> calling kubelet (VM): sync your local state

gerry -> kubectl -> change a pod in kubernetes API -> etcd
(pod controller) -> watch pods -> get the desired state from k8ss ->
(pod controller) -> get the current state from kubelet (VM) ->
(pod controller) -> compare the current state with the desired state ->
(pod controller) -> call kubelet (VM) to sync the local state ->
(pod controller) -> repeat


// Replicaset (group of pods)
/// repicaset-controller
// For(replicaSet). --> 10 pods 1, 2, 3, 4, 5, 6, 7, 8, 9, 10
// Owns(pod)

// delete pod 9
// pod 9 is deleted
// hey reoncile the replicaSet
// find the difference between the desired state and the current state
// 10 pods
// 9 pods
// create a new pod





// Extend the API, register a new type:

//
// apiVersion: gerry.com/v1
// kind: Money
// metadata:
//   name: USD
// spec:
//   value: 100


// apiVersion: gerry.com/v1
// kind: Conversion
// metadata:
//   name: CAD
// spec:
//   ref: Money/USD
//   rate: 1.2

// something has to have a controller (control loop)


// apiVersion: gerry.com/v1
// kind: Conversion
// metadata:
//   name: CAD
// spec:
//   ref: Money/USD
//   rate: 1.2
// status:
//   value: 120



